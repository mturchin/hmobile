{"version":3,"sources":["logo.svg","serviceWorker.js","socket.js","Emitter.js","MediaDevice.js","PeerConnection.js","MainWindow.js","CallWindow.js","CallModal.js","Timer.js","ChatWindow.js","App.js","Preview.js","Test.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","HOST","origin","replace","indexOf","socket","openSocket","Emitter","Object","classCallCheck","this","events","event","_len","arguments","length","args","Array","_key","forEach","fn","apply","push","_","isFunction","listeners","index","findIndex","_fn","splice","MediaDevice","_this","navigator","mediaDevices","getUserMedia","video","facingMode","height","min","ideal","max","audio","then","stream","emit","catch","err","console","log","type","on","len","concat","track","state","enabled","set","getTracks","stop","PC_CONFIG","iceServers","urls","PeerConnection","friendID","possibleConstructorReturn","getPrototypeOf","call","pc","RTCPeerConnection","onicecandidate","to","candidate","onaddstream","mediaDevice","isCaller","config","_this2","addStream","createOffer","start","isStarter","close","off","getDescription","bind","createAnswer","desc","setLocalDescription","sdp","rtcSdp","RTCSessionDescription","setRemoteDescription","iceCandidate","RTCIceCandidate","addIceCandidate","MainWindow","props","startCall","clientId","document","title","react_default","a","createElement","className","Input","placeholder","value","onChange","target","Button","basic","color","onClick","callWithVideo","Icon","name","Component","CallWindow","Video","Audio","btns","icon","setMediaStream","nextProps","conf","toggle","capitalize","setState","_this$props","peerSrc","localSrc","peerVideo","srcObject","localVideo","deviceType","defineProperty","map","btn","key","classnames","disable","toggleMediaDevice","_this3","status","id","ref","el","autoPlay","muted","renderControlButtons","endCall","CallModal","callFrom","acceptWithVideo","rejectCall","Timer","seconds","mins","hours","secondsUI","minsUI","hoursUI","startTimer","assertThisInitialized","self","timex","setTimeout","Card","Content","ChatWindow","messages","x","sendBy","message","Image","src","Message","href","download","filename","processingMessage","moment","timestamp","fromNow","action","onMessageChange","onSubmit","e","fileEvent","files","for","QRCode","require","keys","patient","physician","App","addMessage","data","toConsumableArray","callWindow","callModal","startCallHandler","endCallHandler","rejectCallHandler","onSubmitPay","postData","showTimer","from","newState","Date","role","split","publicKeyPatient","publicKeyPhysician","apiUrl","patientKey","physicianKey","timeElapsed","startTime","transactionDate","JSON","stringify","error","showErrorMsg","errorMsg","url","undefined","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","response","json","reader","FileReader","onload","evt","result","readAsDataURL","isPatient","Grid","celled","Row","Column","tablet","computer","mobile","header","Label","as","extra","Math","round","random","src_Timer","Divider","horizontal","labelPosition","src_MainWindow","success","content","src_CallWindow","src_CallModal","src_ChatWindow","Preview","playRef","React","createRef","image","current","width","Test","routing","BrowserRouter","Route","exact","path","component","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sMCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mKChBFC,EAAOJ,OAAOC,SAASI,OAAOC,QAAQ,QAAS,MAEhDF,EAAKG,QAAQ,cAAgB,IAC9BH,EAAK,kBAEP,IAEeI,EAFCC,IAAWL,qCCuBZM,qBA3Bb,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbG,KAAKC,OAAS,oDAGXC,GAAgB,QAAAC,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,EAAA,GAAAJ,UAAAI,GAInB,OAHIR,KAAKC,OAAOC,IACdF,KAAKC,OAAOC,GAAOO,QAAQ,SAAAC,GAAE,OAAIA,EAAEC,WAAF,EAAML,KAElCN,gCAGNE,EAAOQ,GAGR,OAFIV,KAAKC,OAAOC,GAAQF,KAAKC,OAAOC,GAAOU,KAAKF,GAC3CV,KAAKC,OAAOC,GAAS,CAACQ,GACpBV,iCAGLE,EAAOQ,GACT,GAAIR,GAASW,IAAEC,WAAWJ,GAAK,CAC7B,IAAMK,EAAYf,KAAKC,OAAOC,GACxBc,EAAQD,EAAUE,UAAU,SAAAC,GAAG,OAAIA,IAAQR,IACjDK,EAAUI,OAAOH,EAAO,QACnBhB,KAAKC,OAAOC,GAAS,GAC5B,OAAOF,eC8BIoB,kLA9CL,IAAAC,EAAArB,KAiBN,OARAsB,UAAUC,aACPC,aATiB,CAClBC,MAAO,CACLC,WAAY,OACZC,OAAQ,CAAEC,IAAK,IAAKC,MAAO,IAAKC,IAAK,OAEvCC,OAAO,IAKNC,KAAK,SAACC,GACLZ,EAAKY,OAASA,EACdZ,EAAKa,KAAK,SAAUD,KAErBE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAErBpC,oCAOFuC,EAAMC,GACX,IAAMC,EAAMrC,UAAUC,OAOtB,OANIL,KAAKiC,QACPjC,KAAKiC,OAAL,MAAAS,OAAkBH,EAAlB,aAAkC9B,QAAQ,SAACkC,GACzC,IAAMC,EAAgB,IAARH,EAAYD,GAAMG,EAAME,QACtChC,IAAEiC,IAAIH,EAAO,UAAWC,KAGrB5C,oCAUP,OAHIA,KAAKiC,QACPjC,KAAKiC,OAAOc,YAAYtC,QAAQ,SAAAkC,GAAK,OAAIA,EAAMK,SAE1ChD,YA9CeH,GCFpBoD,EAAY,CAAEC,WAAY,CAAC,CAAEC,KAAM,CAAC,mCAyF3BC,cAlFb,SAAAA,EAAYC,GAAU,IAAAhC,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACpB/B,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAAsD,GAAAI,KAAAxD,QACKyD,GAAK,IAAIC,kBAAkBT,GAChC5B,EAAKoC,GAAGE,eAAiB,SAAAzD,GAAK,OAAIP,EAAOuC,KAAK,OAAQ,CACpD0B,GAAIvC,EAAKgC,SACTQ,UAAW3D,EAAM2D,aAEnBxC,EAAKoC,GAAGK,YAAc,SAAA5D,GAAK,OAAImB,EAAKa,KAAK,aAAchC,EAAM+B,SAE7DZ,EAAK0C,YAAc,IAAI3C,EACvBC,EAAKgC,SAAWA,EAVIhC,qEAiBhB2C,EAAUC,GAAQ,IAAAC,EAAAlE,KAUtB,OATAA,KAAK+D,YACFvB,GAAG,SAAU,SAACP,GACbiC,EAAKT,GAAGU,UAAUlC,GAClBiC,EAAKhC,KAAK,cAAeD,GACrB+B,EAAUrE,EAAOuC,KAAK,UAAW,CAAE0B,GAAIM,EAAKb,WAC3Ca,EAAKE,gBAEXC,MAAMJ,GAEFjE,kCAMJsE,GAMH,OALIA,GAAW3E,EAAOuC,KAAK,MAAO,CAAE0B,GAAI5D,KAAKqD,WAC7CrD,KAAK+D,YAAYf,OACjBhD,KAAKyD,GAAGc,QACRvE,KAAKyD,GAAK,KACVzD,KAAKwE,MACExE,2CAOP,OAHAA,KAAKyD,GAAGW,cACLpC,KAAKhC,KAAKyE,eAAeC,KAAK1E,OAC9BmC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACrBpC,4CAOP,OAHAA,KAAKyD,GAAGkB,eACL3C,KAAKhC,KAAKyE,eAAeC,KAAK1E,OAC9BmC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACrBpC,4CAGM4E,GAGb,OAFA5E,KAAKyD,GAAGoB,oBAAoBD,GAC5BjF,EAAOuC,KAAK,OAAQ,CAAE0B,GAAI5D,KAAKqD,SAAUyB,IAAKF,IACvC5E,kDAMY8E,GACnB,IAAMC,EAAS,IAAIC,sBAAsBF,GAEzC,OADA9E,KAAKyD,GAAGwB,qBAAqBF,GACtB/E,6CAKO6D,GACd,GAAIA,EAAW,CACb,IAAMqB,EAAe,IAAIC,gBAAgBtB,GACzC7D,KAAKyD,GAAG2B,gBAAgBF,GAE1B,OAAOlF,YAnFkBH,8BCHzBwD,EAAW,YA0CAgC,wLAtCC5D,GAAO,IAAAJ,EAAArB,KACbiE,EAAS,CAAElC,OAAO,GAExB,OADAkC,EAAOxC,MAAQA,EACR,kBAAMJ,EAAKiE,MAAMC,WAAU,EAAMlC,EAAUY,qCAE3C,IACCuB,EAAaxF,KAAKsF,MAAlBE,SAER,OADAC,SAASC,MAAT,GAAAhD,OAAoB8C,EAApB,gBAEEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,YAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,YAAY,0BACnBC,MAAO5C,EACP6C,SAAU,SAAAhG,GAAK,OAAImD,EAAWnD,EAAMiG,OAAOF,SAG3CN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,OAAK,EAACC,MAAM,QACZR,UAAU,gCACVS,QAASvG,KAAKwG,eAAc,IAH9B,OAMEb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,eACXf,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,sBA9BAC,sCCwFVC,cAvFb,SAAAA,EAAYtB,GAAO,IAAAjE,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAA4G,IACjBvF,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAA8G,GAAApD,KAAAxD,KAAMsF,KACD1C,MAAQ,CACXiE,OAAO,EACPC,OAAO,GAGTzF,EAAK0F,KAAO,CACV,CAAExE,KAAM,QAASyE,KAAM,mBACvB,CAAEzE,KAAM,QAASyE,KAAM,kBATR3F,mFAcjBrB,KAAKiH,mEAGmBC,GAExB,IAAKlH,KAAKsF,MAAMrB,QAAUiD,EAAUjD,OAAQ,KAClCA,EAAwBiD,EAAxBjD,OAAQF,EAAgBmD,EAAhBnD,YAChBlD,IAAEJ,QAAQwD,EAAQ,SAACkD,EAAM5E,GAAP,OAChBwB,EAAYqD,OAAOvG,IAAEwG,WAAW9E,GAAO4E,KAEzCnH,KAAKsH,SAAS,CACZT,MAAO5C,EAAOxC,MACdqF,MAAO7C,EAAOlC,sDAMlB/B,KAAKiH,0DAGU,IAAAM,EACevH,KAAKsF,MAA3BkC,EADOD,EACPC,QAASC,EADFF,EACEE,SACbzH,KAAK0H,WAAaF,IAASxH,KAAK0H,UAAUC,UAAYH,GACtDxH,KAAK4H,YAAcH,IAAUzH,KAAK4H,WAAWD,UAAYF,6CAO7CI,GAChB7H,KAAKsH,SAALxH,OAAAgI,EAAA,EAAAhI,CAAA,GACG+H,GAAc7H,KAAK4C,MAAMiF,KAE5B7H,KAAKsF,MAAMvB,YAAYqD,OAAOS,kDAGT,IAAA3D,EAAAlE,KAKrB,OAAOA,KAAK+G,KAAKgB,IAAI,SAAAC,GAAG,OACtBrC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE6B,IAAG,MAAAvF,OAAQsF,EAAIzF,MACfuD,WAPckB,EAOMgB,EAAIhB,KAPJzE,EAOUyF,EAAIzF,KAPL2F,IAAU,iBAAAxF,OAAkBsE,GAAQ,CACnEmB,SAAUjE,EAAKtB,MAAML,MAOnBgE,QAAS,kBAAMrC,EAAKkE,kBAAkBJ,EAAIzF,QAE3CyF,EAAIzF,MAVU,IAACyE,EAAMzE,qCAcjB,IAAA8F,EAAArI,KACCsI,EAAWtI,KAAKsF,MAAhBgD,OACR,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAWoC,IAAW,cAAeI,IACxC3C,EAAAC,EAAAC,cAAA,SAAO0C,GAAG,YAAYC,IAAK,SAAAC,GAAE,OAAIJ,EAAKX,UAAYe,GAAIC,UAAQ,EAAE5C,UAAU,eAC1EH,EAAAC,EAAAC,cAAA,SAAO0C,GAAG,aAAaC,IAAK,SAAAC,GAAE,OAAIJ,EAAKT,WAAaa,GAAIC,UAAQ,EAACC,OAAK,EAAE7C,UAAU,eAClFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZ9F,KAAK4I,uBACNjD,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEN,UAAU,gCACVS,QAAS,kBAAM8B,EAAK/C,MAAMuD,SAAQ,KAFpC,qBA5EelC,aCoCVmC,0LApCGrH,GAAO,IAAAJ,EAAArB,KACfiE,EAAS,CAAElC,OAAO,EAAMN,SAC9B,OAAO,kBAAMJ,EAAKiE,MAAMC,WAAU,EAAOlE,EAAKiE,MAAMyD,SAAU9E,qCAI9D,OACE0B,EAAAC,EAAAC,cAAA,OAAKC,UAAWoC,IAAW,aAAclI,KAAKsF,MAAMgD,SAClD3C,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAU9F,KAAKsF,MAAMyD,UADvC,mBAGApD,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,OAAK,EAACC,MAAM,QACZR,UAAU,gCACVS,QAASvG,KAAKgJ,iBAAgB,IAHhC,cAMErD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,eACXf,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,YAIbf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,OAAK,EAACC,MAAM,SACZR,UAAU,gCACVS,QAASvG,KAAKsF,MAAM2D,YAHtB,uBAxBgBtC,sBCuETuC,cAtEb,SAAAA,EAAY5D,GAAO,IAAAjE,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAkJ,IACjB7H,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAAoJ,GAAA1F,KAAAxD,KAAMsF,KACD1C,MAAQ,CACXuG,QAAQ,EACRC,KAAK,EACLC,MAAO,EACPC,UAAW,KACXC,OAAO,MACPC,QAAS,OAEXnI,EAAKoI,WAAWpI,EAAKoI,WAAW/E,KAAhB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KAVCA,mFAajBrB,KAAKyJ,kDAKL,IAAIE,EAAO3J,KACXA,KAAK4J,MAAQC,WAAW,WACtB,IAAIV,EAAWQ,EAAK/G,MAAMuG,QACtBC,EAAQO,EAAK/G,MAAMwG,KACnBC,EAASM,EAAK/G,MAAMyG,QACxBF,EACa,KACTA,EAAQ,IACRC,EACO,KACNA,EAAK,IACLC,EACU,IACRM,EAAKrC,SAAS,CAACkC,QAASH,EAAM,OAIlCD,EAAK,GACNO,EAAKrC,SAAS,CAACiC,OAAO,IAAMH,EAAK,MAGhCO,EAAKrC,SAAS,CAACiC,OAAQH,EAAK,OAI5BD,EAAS,GACVQ,EAAKrC,SAAS,CAACgC,UAAW,IAAMH,IAEhCQ,EAAKrC,SAAS,CAACgC,UAAWH,IAE5BQ,EAAKrC,SAAS,CAAC6B,UAASC,OAAMC,UAC9BhH,QAAQC,IAAI,QAAS+G,EAAO,OAAQD,EAAM,UAAWD,GACrDQ,EAAKF,cACL,sCAMF,OADApH,QAAQC,IAAI,QAEVqD,EAAAC,EAAAC,cAACiE,EAAA,EAAKC,QAAN,KACEpE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,kBACXf,EAAAC,EAAAC,cAAA,OAAK0C,GAAG,SACN5C,EAAAC,EAAAC,cAAA,QAAM0C,GAAG,SAASvI,KAAK4C,MAAM4G,SAC7B7D,EAAAC,EAAAC,cAAA,QAAM0C,GAAG,QAAQvI,KAAK4C,MAAM2G,QAC5B5D,EAAAC,EAAAC,cAAA,QAAM0C,GAAG,WAAWvI,KAAK4C,MAAM0G,oBAhErB3C,+BCoELqD,cAjEb,SAAAA,EAAY1E,GAAO,IAAAjE,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgK,IACjB3I,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAAkK,GAAAxG,KAAAxD,KAAMsF,KACD1C,MAAQ,GAFIvB,qHASV,IAAA6C,EAAAlE,KAaP,OADAqC,QAAQC,IAAI,QAEVqD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZ9F,KAAKsF,MAAM2E,SAASlC,IAAI,SAAAmC,GAEvB,OADA7H,QAAQC,IAAI4H,GACLvE,EAAAC,EAAAC,cAAA,OAAKC,UAAWoE,EAAEC,SAAWjG,EAAKoB,MAAME,SAAU,aAAa,iBAjBtD,SAAC0E,GACvB,OAA0C,IAAnCA,EAAEE,QAAQ1K,QAAQ,cACvBiG,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,IAAKJ,EAAEE,UACbzE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACCjE,MAAO4D,EAAEC,SAAWjG,EAAKoB,MAAME,SAAU,QAAQ,UAE9C0E,EAAEE,QAAQ1K,QAAQ,aAAe,GAAKwK,EAAEE,QAAQ1K,QAAQ,iBAAmB,GAAKwK,EAAEE,QAAQ1K,QAAQ,qBAAuB,EAC5HiG,EAAAC,EAAAC,cAAA,KAAG2E,KAAMN,EAAEE,QAASjE,OAAO,SAASsE,SAAUP,EAAEQ,UAAU/E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,aAArE,IAAoFwD,EAAEQ,UACrFR,EAAEE,SAWCO,CAAkBT,GAEpBvE,EAAAC,EAAAC,cAAA,QAAMS,MAAM,QAAQsE,IAAOV,EAAEW,WAAWC,eAK5CnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOxD,KAAK,OAAOyD,YAAY,MAAM+E,QAAM,GACzCpF,EAAAC,EAAAC,cAAA,SAAOK,SAAUlG,KAAKsF,MAAM0F,gBAAiB/E,MAAOjG,KAAKsF,MAAM8E,UAC/DzE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQE,MAAM,WAAW/D,KAAK,SAAUgE,QAASvG,KAAKsF,MAAM2F,UAC5DtF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,eADX,SAOFf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,SAAOtD,KAAK,OAAO2D,SAAW,SAACgF,GAAD,OAAOhH,EAAKoB,MAAM6F,UAAUD,EAAE/E,OAAOiF,QAAStF,UAAU,YAAYyC,GAAG,uBAErG5C,EAAAC,EAAAC,cAAA,SAAOwF,IAAI,qBAAqBvF,UAAU,iCACxCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADf,2BAnDaa,wCCQrB2E,EAASC,EAAQ,KAGjBC,EAAO,CAACC,QAAS,6CAA8CC,UAAW,8CAuR/DC,cAlRb,SAAAA,EAAYrG,GAAO,IAAAjE,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAA2L,IACjBtK,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAA6L,GAAAnI,KAAAxD,KAAMsF,KAmFRsG,WAAa,SAAAC,GACXxJ,QAAQC,IAAIuJ,GACZxK,EAAKiG,SAAS,CAAC2C,SAASnK,OAAAgM,EAAA,EAAAhM,CAAKuB,EAAKuB,MAAMqH,UAAjBvH,OAAA,CAA2BmJ,MAClDxJ,QAAQC,IAAIjB,EAAKuB,MAAMqH,WArFvB5I,EAAKuB,MAAQ,CACXwH,QAAS,GACTH,SAAU,GACVzE,SAAU,GACVuG,WAAY,GACZC,UAAW,GACXjD,SAAU,GACVtB,SAAU,KACVD,QAAS,MAIXnG,EAAK2J,gBAAiB3J,EAAK2J,gBAAgBtG,KAArB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACtBA,EAAKuK,WAAYvK,EAAKuK,WAAWlH,KAAhB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACjBA,EAAK4J,SAAS5J,EAAK4J,SAASvG,KAAd5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACdA,EAAKoC,GAAK,GACVpC,EAAK4C,OAAS,KACd5C,EAAK4K,iBAAmB5K,EAAKkE,UAAUb,KAAf5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACxBA,EAAK6K,eAAiB7K,EAAKwH,QAAQnE,KAAb5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACtBA,EAAK8K,kBAAoB9K,EAAK4H,WAAWvE,KAAhB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACzBA,EAAKoI,WAAapI,EAAKoI,WAAW/E,KAAhB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KAClBA,EAAK+K,YAAc/K,EAAK+K,YAAY1H,KAAjB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACnBA,EAAKgL,SAAWhL,EAAKgL,SAAS3H,KAAd5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KAChBA,EAAK8J,UAAU9J,EAAK8J,UAAUzG,KAAf5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACf,IAAIsI,EAAI7J,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,IA1BS,OA2BjB1B,EAAO6C,GAAG,kBAAmB,SAASqJ,GACpCxJ,QAAQC,IAAI,kBAAmBuJ,GAC/BlC,EAAKiC,WAAWC,GACZlC,EAAK/G,MAAM0J,WACb3C,EAAKF,eAGNjH,GAAG,OAAQ,SAAAqJ,GAAI,OAAIxK,EAAKiG,SAAS,CAAE9B,SAAUqG,EAAKtD,OAClD/F,GAAG,UAAW,SAAAqJ,GAAI,OAAIxK,EAAKiG,SAAS,CAAE0E,UAAW,SAAUjD,SAAU8C,EAAKU,SAC1E/J,GAAG,OAAQ,SAACqJ,GACPA,EAAK/G,KACPzD,EAAKoC,GAAGwB,qBAAqB4G,EAAK/G,KACZ,UAAlB+G,EAAK/G,IAAIvC,MAAkBlB,EAAKoC,GAAGkB,gBAClCtD,EAAKoC,GAAG2B,gBAAgByG,EAAKhI,WAEhC8F,EAAK/G,MAAM0J,WACb3C,EAAKF,eAGRjH,GAAG,MAAOnB,EAAKwH,QAAQnE,KAAb5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KAAwB,IAClCa,KAAK,QA/CSb,sHAwDP2C,EAAUX,EAAUY,GAAQ,IAAAC,EAAAlE,KACpCA,KAAKiE,OAASA,EACdjE,KAAKyD,GAAK,IAAIL,EAAeC,GAC1Bb,GAAG,cAAe,SAAC8H,GAClB,IAAMkC,EAAW,CAAET,WAAY,SAAUtE,SAAU6C,GAC9CtG,IAAUwI,EAASR,UAAY,IACpC9H,EAAKoD,SAASkF,KAEfhK,GAAG,aAAc,SAAA8H,GAAG,OAAIpG,EAAKoD,SAAS,CAAEE,QAAS8C,MACjDjG,MAAML,EAAUC,wCAInBtE,EAAOuC,KAAK,MAAO,CAAE0B,GAAI5D,KAAK4C,MAAMmG,WACpC/I,KAAKsH,SAAS,CAAE0E,UAAW,qCAGrB1H,GACFzD,IAAEC,WAAWd,KAAKyD,GAAGT,OAAOhD,KAAKyD,GAAGT,KAAKsB,GAC7CtE,KAAKyD,GAAK,GACVzD,KAAKiE,OAAS,KACdjE,KAAKsH,SAAS,CACZyE,WAAY,GACZtE,SAAU,KACVD,QAAS,+CAUC0D,GACdlL,KAAKsH,SAAS,CAAC8C,QAASc,EAAE/E,OAAOF,2CAKjCtG,EAAOuC,KAAK,eAAgB,CAC1BkI,QAAUpK,KAAK4C,MAAMwH,QACrBD,OAAQnK,KAAK4C,MAAM4C,SACnBqF,UAAW,IAAI4B,OAGjBzM,KAAKsH,SAAS,CAAC8C,QAAS,2CAIb,IAAA/B,EAAArI,KACL0M,EAAO1M,KAAK4C,MAAM4C,SAASmH,MAAM,KAAK,GAC5C,GAAY,YAATD,EAAmB,CACpB,IAAME,EAAmBpB,EAAKkB,GACxBG,EAAqBrB,EAAI,UAC/BnJ,QAAQC,IAAI,qBAAsBtC,KAAK4C,OACvC5C,KAAKqM,SAASS,sFAAmC,CAC/CC,WAAcH,EACdI,aAAgBH,EAChBI,YAAe,IAAIR,KAASzM,KAAK4C,MAAMsK,UACvCC,gBAAmB,IAAIV,OAEtBzK,KAAK,SAAA6J,GAA4C,OAAnCxJ,QAAQC,IAAI8K,KAAKC,UAAUxB,IAAeuB,KAAKC,UAAUxB,KACvE7J,KAAK,SAAA6J,GACJxD,EAAKf,SAAS,CAACgF,WAAW,MAE3BnK,MAAM,SAAAmL,GACLjF,EAAKf,SAAS,CAACgF,WAAW,EAAOiB,cAAc,EAAMC,SAAU,4FAQzC,IAArBC,EAAqBrN,UAAAC,OAAA,QAAAqN,IAAAtN,UAAA,GAAAA,UAAA,MAAXyL,EAAWzL,UAAAC,OAAA,QAAAqN,IAAAtN,UAAA,GAAAA,UAAA,GAAJ,GAEtB,OAAOuN,MAAMF,EAAK,CACdG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACLC,eAAgB,mCAGpBC,SAAU,SACVC,SAAU,cACVC,KAAMhB,KAAKC,UAAUxB,KAExB7J,KAAK,SAAAqM,GAAQ,OAAIA,EAASC,8CAI7BjM,QAAQC,IAAI,aAEZtC,KAAKsH,SAAS,CAACgF,WAAW,EAAMY,UAAW,IAAIT,yCAGvCrB,GACR,IAAIzB,EAAO3J,KACXqC,QAAQC,IAAI8I,GACZ,IAAIS,EAAOT,EAAM,GACZmD,EAAS,IAAIC,WAChBD,EAAOE,OAAS,SAASC,GAExB/O,EAAOuC,KAAK,eAAgB,CAC1BkI,QAAUsE,EAAIvI,OAAOwI,OACrBxE,OAAQR,EAAK/G,MAAM4C,SACnBkF,SAAUmB,EAAKnF,KACfmE,UAAW,IAAI4B,QAGnB8B,EAAOK,cAAc/C,oCAGtB,IAAMgD,EAAkD,YAAtC7O,KAAK4C,MAAM4C,SAASmH,MAAM,KAAK,GAEjD,OADAtK,QAAQC,IAAIuM,EAAW7O,KAAK4C,MAAM4C,UAEhCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAMC,UAAU,OAEhBH,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAMC,OAAO,aAAcjJ,UAAU,OACnCH,EAAAC,EAAAC,cAACiJ,EAAA,EAAKE,IAAN,KACErJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAKG,OAAN,CAAaC,OAAQ,EAAGC,SAAU,EAAGC,OAAQ,IAC7CzJ,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAMhE,UAAU,WACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAKC,QAAN,CAAcsF,OAAO,cACrB1J,EAAAC,EAAAC,cAACiE,EAAA,EAAKC,QAAN,gBAECpE,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOC,GAAG,IAAIzJ,UAAU,aAAa9F,KAAK4C,MAAM4C,WAGjDG,EAAAC,EAAAC,cAACiE,EAAA,EAAKC,QAAN,CAAcyF,OAAK,GACjB7J,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,SADb,SAES+I,KAAKC,MAAsB,IAAhBD,KAAKE,UAFzB,WAKFhK,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAMhE,UAAU,WACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAKC,QAAN,CAAcsF,OAAQ,oBACrBrP,KAAK4C,MAAM0J,WAAY3G,EAAAC,EAAAC,cAAC+J,EAAD,MAKvBf,GAAYlJ,EAAAC,EAAAC,cAACiE,EAAA,EAAKC,QAAN,KACVpE,EAAAC,EAAAC,cAACyF,EAAD,CAAQrF,MAAOjG,KAAK4C,MAAMmG,WAC1BpD,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAASC,YAAU,GAAnB,MAEDnK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQY,MAAI,EAAC+I,cAAc,OAAQzJ,MAAM,QAAQC,QAASvG,KAAKoM,aAA/D,UAEAzG,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,KAAK,cAWjBf,EAAAC,EAAAC,cAACiJ,EAAA,EAAKG,OAAN,CAAaC,OAAQ,EAAGC,SAAU,EAAGC,OAAQ,IAC5CP,GAAalJ,EAAAC,EAAAC,cAACmK,EAAD,CACZxK,SAAUxF,KAAK4C,MAAM4C,SACrBD,UAAWvF,KAAKiM,oBAEhBjM,KAAK4C,MAAMmG,WAAa8F,GACxBlJ,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACG0F,SAAO,EACPZ,OAAO,mDACPa,QAAQ,0DAIZlQ,KAAK4C,MAAM2K,cAAiB5H,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACzB+C,OAAK,EACL+B,OAAQrP,KAAK4C,MAAM4K,WAEI,WAA1BxN,KAAK4C,MAAMmJ,YAA2BpG,EAAAC,EAAAC,cAACsK,EAAD,CACrC7H,OAAQtI,KAAK4C,MAAMmJ,WACnBtE,SAAUzH,KAAK4C,MAAM6E,SACrBD,QAASxH,KAAK4C,MAAM4E,QACpBvD,OAAQjE,KAAKiE,OACbF,YAAa/D,KAAKyD,GAAGM,YACrB8E,QAAS7I,KAAKkM,iBAEflM,KAAK4C,MAAMmG,UAAqC,WAAzB/I,KAAK4C,MAAMoJ,WACjCrG,EAAAC,EAAAC,cAACuK,EAAD,CACE9H,OAAQtI,KAAK4C,MAAMoJ,UACnBzG,UAAWvF,KAAKiM,iBAChBhD,WAAYjJ,KAAKmM,kBACjBpD,SAAU/I,KAAK4C,MAAMmG,YAMzBpD,EAAAC,EAAAC,cAACiJ,EAAA,EAAKG,OAAN,CAAaC,OAAQ,EAAGC,SAAU,EAAIC,OAAQ,IAC9CzJ,EAAAC,EAAAC,cAACwK,EAAD,CACE7K,SAAUxF,KAAK4C,MAAM4C,SACrB4E,QAASpK,KAAK4C,MAAMwH,QACpBH,SAAUjK,KAAK4C,MAAMqH,SACrBe,gBAAiBhL,KAAKgL,gBACtBC,SAAUjL,KAAKiL,SACfE,UAAWnL,KAAKmL,wBArQZxE,aCeH2J,cA9Bb,SAAAA,EAAYhL,GAAO,IAAAjE,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsQ,IACjBjP,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAAwQ,GAAA9M,KAAAxD,KAAMsF,KACD1C,MAAQ,GAIbvB,EAAKkP,QAAUC,IAAMC,YANJpP,mFAUjB,IAAIsI,EAAO3J,KACXL,EAAO6C,GAAG,SAAS,SAASkO,GAC1BrO,QAAQC,IAAIoO,GACN/G,EAAK4G,QAAQI,QAAQrG,IAAIoG,qCAQjC,OACE/K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,UAEAH,EAAAC,EAAAC,cAAA,OAAK0C,GAAG,OAAOC,IAAKxI,KAAKuQ,QAASK,MAAM,gBAzBxBjK,aC4FPkK,cAvFb,SAAAA,EAAYvL,GAAO,IAAAjE,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAA6Q,IACjBxP,EAAAvB,OAAAwD,EAAA,EAAAxD,CAAAE,KAAAF,OAAAyD,EAAA,EAAAzD,CAAA+Q,GAAArN,KAAAxD,KAAMsF,KACD1C,MAAQ,CACX4C,SAAU,GACVuG,WAAY,GACZC,UAAW,GACXjD,SAAU,GACVtB,SAAU,KACVD,QAAS,MAEXnG,EAAKoC,GAAK,GACVpC,EAAK4C,OAAS,KACd5C,EAAK4K,iBAAmB5K,EAAKkE,UAAUb,KAAf5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACxBA,EAAK6K,eAAiB7K,EAAKwH,QAAQnE,KAAb5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KACtBA,EAAK8K,kBAAoB9K,EAAK4H,WAAWvE,KAAhB5E,OAAA4J,EAAA,EAAA5J,QAAA4J,EAAA,EAAA5J,CAAAuB,KAdRA,mFAiBC,IAAA6C,EAAAlE,KAClBL,EACG6C,GAAG,OAAQ,SAAAqJ,GAAI,OAAI3H,EAAKoD,SAAS,CAAE9B,SAAUqG,EAAKtD,OAClD/F,GAAG,UAAW,SAAAqJ,GAAI,OAAI3H,EAAKoD,SAAS,CAAE0E,UAAW,SAAUjD,SAAU8C,EAAKU,SAC1E/J,GAAG,OAAQ,SAACqJ,GACPA,EAAK/G,KACPZ,EAAKT,GAAGwB,qBAAqB4G,EAAK/G,KACZ,UAAlB+G,EAAK/G,IAAIvC,MAAkB2B,EAAKT,GAAGkB,gBAClCT,EAAKT,GAAG2B,gBAAgByG,EAAKhI,aAErCrB,GAAG,MAAOxC,KAAK6I,QAAQnE,KAAK1E,MAAM,IAClCkC,KAAK,0CAGA8B,EAAUX,EAAUY,GAAQ,IAAAoE,EAAArI,KACpCA,KAAKiE,OAASA,EACdjE,KAAKyD,GAAK,IAAIL,EAAeC,GAC1Bb,GAAG,cAAe,SAAC8H,GAClB,IAAMkC,EAAW,CAAET,WAAY,SAAUtE,SAAU6C,GAC9CtG,IAAUwI,EAASR,UAAY,IACpC3D,EAAKf,SAASkF,KAEfhK,GAAG,aAAc,SAAA8H,GAAG,OAAIjC,EAAKf,SAAS,CAAEE,QAAS8C,MACjDjG,MAAML,EAAUC,wCAInBtE,EAAOuC,KAAK,MAAO,CAAE0B,GAAI5D,KAAK4C,MAAMmG,WACpC/I,KAAKsH,SAAS,CAAE0E,UAAW,qCAGrB1H,GACFzD,IAAEC,WAAWd,KAAKyD,GAAGT,OAAOhD,KAAKyD,GAAGT,KAAKsB,GAC7CtE,KAAKyD,GAAK,GACVzD,KAAKiE,OAAS,KACdjE,KAAKsH,SAAS,CACZyE,WAAY,GACZtE,SAAU,KACVD,QAAS,wCAOX,OAFAnF,QAAQC,IAAI,QAGVqD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmK,EAAD,CACExK,SAAUxF,KAAK4C,MAAM4C,SACrBD,UAAWvF,KAAKiM,mBAElBtG,EAAAC,EAAAC,cAACsK,EAAD,CACE7H,OAAQtI,KAAK4C,MAAMmJ,WACnBtE,SAAUzH,KAAK4C,MAAM6E,SACrBD,QAASxH,KAAK4C,MAAM4E,QACpBvD,OAAQjE,KAAKiE,OACbF,YAAa/D,KAAKyD,GAAGM,YACrB8E,QAAS7I,KAAKkM,iBAEhBvG,EAAAC,EAAAC,cAACuK,EAAD,CACE9H,OAAQtI,KAAK4C,MAAMoJ,UACnBzG,UAAWvF,KAAKiM,iBAChBhD,WAAYjJ,KAAKmM,kBACjBpD,SAAU/I,KAAK4C,MAAMmG,mBAjFZpC,aCEbmK,UACJnL,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxF,IACjChG,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWb,IAClC3K,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWN,OAKrCO,IAASC,OAAOP,EAASrL,SAAS6L,eAAe,Sb4G3C,kBAAmBhQ,WACrBA,UAAUiQ,cAAcC,MAAMxP,KAAK,SAAAyP,GACjCA,EAAaC","file":"static/js/main.2688d3f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b2dc1699.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import openSocket from 'socket.io-client';\n\nvar HOST = window.location.origin.replace(/^http/, 'ws')\n\nif(HOST.indexOf('localhost') > -1){\n  HOST='localhost:4200'\n}\nconst  socket = openSocket(HOST);\n\nexport default socket;\n","import _ from 'lodash';\n\nclass Emitter {\n  constructor() {\n    this.events = {};\n  }\n\n  emit(event, ...args) {\n    if (this.events[event]) {\n      this.events[event].forEach(fn => fn(...args));\n    }\n    return this;\n  }\n\n  on(event, fn) {\n    if (this.events[event]) this.events[event].push(fn);\n    else this.events[event] = [fn];\n    return this;\n  }\n\n  off(event, fn) {\n    if (event && _.isFunction(fn)) {\n      const listeners = this.events[event];\n      const index = listeners.findIndex(_fn => _fn === fn);\n      listeners.splice(index, 1);\n    } else this.events[event] = [];\n    return this;\n  }\n}\n\nexport default Emitter;\n","import _ from 'lodash';\nimport Emitter from './Emitter';\n\n/**\n * Manage all media devices\n */\nclass MediaDevice extends Emitter {\n  /**\n   * Start media devices and send stream\n   */\n  start() {\n    const constraints = {\n      video: {\n        facingMode: 'user',\n        height: { min: 360, ideal: 720, max: 1080 }\n      },\n      audio: true\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        this.stream = stream;\n        this.emit('stream', stream);\n      })\n      .catch(err => console.log(err));\n\n    return this;\n  }\n  /**\n   * Turn on/off a device\n   * @param {String} type - Type of the device\n   * @param {Boolean} [on] - State of the device\n   */\n  toggle(type, on) {\n    const len = arguments.length;\n    if (this.stream) {\n      this.stream[`get${type}Tracks`]().forEach((track) => {\n        const state = len === 2 ? on : !track.enabled;\n        _.set(track, 'enabled', state);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Stop all media track of devices\n   */\n  stop() {\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n    return this;\n  }\n}\n\nexport default MediaDevice;\n","import MediaDevice from './MediaDevice';\nimport Emitter from './Emitter';\nimport socket from './socket';\n\nconst PC_CONFIG = { iceServers: [{ urls: ['stun:stun.l.google.com:19302'] }] };\n\nclass PeerConnection extends Emitter {\n  /**\n     * Create a PeerConnection.\n     * @param {String} friendID - ID of the friend you want to call.\n     */\n  constructor(friendID) {\n    super();\n    this.pc = new RTCPeerConnection(PC_CONFIG);\n    this.pc.onicecandidate = event => socket.emit('call', {\n      to: this.friendID,\n      candidate: event.candidate\n    });\n    this.pc.onaddstream = event => this.emit('peerStream', event.stream);\n\n    this.mediaDevice = new MediaDevice();\n    this.friendID = friendID;\n  }\n  /**\n   * Starting the call\n   * @param {Boolean} isCaller\n   * @param {Object} config - configuration for the call {audio: boolean, video: boolean}\n   */\n  start(isCaller, config) {\n    this.mediaDevice\n      .on('stream', (stream) => {\n        this.pc.addStream(stream);\n        this.emit('localStream', stream);\n        if (isCaller) socket.emit('request', { to: this.friendID });\n        else this.createOffer();\n      })\n      .start(config);\n\n    return this;\n  }\n  /**\n   * Stop the call\n   * @param {Boolean} isStarter\n   */\n  stop(isStarter) {\n    if (isStarter) socket.emit('end', { to: this.friendID });\n    this.mediaDevice.stop();\n    this.pc.close();\n    this.pc = null;\n    this.off();\n    return this;\n  }\n\n  createOffer() {\n    this.pc.createOffer()\n      .then(this.getDescription.bind(this))\n      .catch(err => console.log(err));\n    return this;\n  }\n\n  createAnswer() {\n    this.pc.createAnswer()\n      .then(this.getDescription.bind(this))\n      .catch(err => console.log(err));\n    return this;\n  }\n\n  getDescription(desc) {\n    this.pc.setLocalDescription(desc);\n    socket.emit('call', { to: this.friendID, sdp: desc });\n    return this;\n  }\n\n  /**\n   * @param {Object} sdp - Session description\n   */\n  setRemoteDescription(sdp) {\n    const rtcSdp = new RTCSessionDescription(sdp);\n    this.pc.setRemoteDescription(rtcSdp);\n    return this;\n  }\n  /**\n   * @param {Object} candidate - ICE Candidate\n   */\n  addIceCandidate(candidate) {\n    if (candidate) {\n      const iceCandidate = new RTCIceCandidate(candidate);\n      this.pc.addIceCandidate(iceCandidate);\n    }\n    return this;\n  }\n}\n\nexport default PeerConnection;\n","import React, { Component } from 'react';\nimport { Input, Button, Icon } from 'semantic-ui-react'\n\nlet friendID = 'physician';\n\nclass MainWindow extends Component {\n\n  callWithVideo(video) {\n    const config = { audio: true };\n    config.video = video;\n    return () => this.props.startCall(true, friendID, config);\n  }\n  render() {\n    const { clientId } = this.props;\n    document.title = `${clientId} - VideoCall`;\n    return (\n      <div className=\"container main-window\">\n        <div>\n\n        </div>\n        <div className='callAction_btn'>\n          <Input placeholder='Who are you looking for'\n          value={friendID}\n          onChange={event => friendID = event.target.value}\n          />\n\n          <div>\n            <Button\n              basic color='green'\n              className=\"btn-action fa fa-video-camera\"\n              onClick={this.callWithVideo(true)}\n            >\n              Call\n              <span className=\"btn_span\"></span>\n              <Icon name='microphone' />\n              <Icon name='camera' />\n            </Button>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainWindow;\n\n//\n// <Button\n//   className=\"btn-action fa fa-phone\"\n//   onClick={this.callWithVideo(false)}\n// >\n//   Call\n//   <span className=\"btn_span\"></span>\n//   <Icon name='camera' />\n// </Button>\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport _ from 'lodash';\nimport { Button } from 'semantic-ui-react'\n\nclass CallWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Video: true,\n      Audio: true\n    };\n\n    this.btns = [\n      { type: 'Video', icon: 'fa-video-camera' },\n      { type: 'Audio', icon: 'fa-microphone' }\n    ];\n  }\n\n  componentDidMount() {\n    this.setMediaStream();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Initialize when the call started\n    if (!this.props.config && nextProps.config) {\n      const { config, mediaDevice } = nextProps;\n      _.forEach(config, (conf, type) =>\n        mediaDevice.toggle(_.capitalize(type), conf));\n\n      this.setState({\n        Video: config.video,\n        Audio: config.audio\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  }\n\n  setMediaStream() {\n    const { peerSrc, localSrc } = this.props;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\n  }\n\n  /**\n   * Turn on/off a media device\n   * @param {String} deviceType - Type of the device eg: Video, Audio\n   */\n  toggleMediaDevice(deviceType) {\n    this.setState({\n      [deviceType]: !this.state[deviceType]\n    });\n    this.props.mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(`btn-action fa ${icon}`, {\n      disable: !this.state[type]\n    });\n\n    return this.btns.map(btn => (\n      <Button\n        key={`btn${btn.type}`}\n        className={getClass(btn.icon, btn.type)}\n        onClick={() => this.toggleMediaDevice(btn.type)}\n      >\n      {btn.type}\n      </Button>\n    ));\n  }\n  render() {\n    const { status } = this.props;\n    return (\n      <div className={classnames('call-window', status)}>\n        <video id=\"peerVideo\" ref={el => this.peerVideo = el} autoPlay  className='video_Main'/>\n        <video id=\"localVideo\" ref={el => this.localVideo = el} autoPlay muted  className='video_Main'/>\n        <div className=\"video-control\">\n          {this.renderControlButtons()}\n          <Button\n            className=\"btn-action hangup fa fa-phone\"\n            onClick={() => this.props.endCall(true)}\n          >\n            End Call\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CallWindow;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { Button, Icon } from 'semantic-ui-react'\n\nclass CallModal extends Component {\n  acceptWithVideo(video) {\n    const config = { audio: true, video };\n    return () => this.props.startCall(false, this.props.callFrom, config);\n  }\n\n  render() {\n    return (\n      <div className={classnames('call-modal', this.props.status)}>\n        <p>\n          <span className=\"caller\">{this.props.callFrom}</span> is calling ...\n        </p>\n        <Button\n          basic color='green'\n          className=\"btn-action fa fa-video-camera\"\n          onClick={this.acceptWithVideo(true)}\n        >\n        Accept Call\n          <span className=\"btn_span\"></span>\n          <Icon name='microphone' />\n          <Icon name='camera' />\n        </Button>\n\n\n        <Button\n          basic color='violet'\n          className=\"btn-action hangup fa fa-phone\"\n          onClick={this.props.rejectCall}\n          >\n          Reject Call\n        </Button>\n\n      </div>\n    );\n  }\n}\n\nexport default CallModal;\n//\n// <Button\n//   basic color='green'\n//   className=\"btn-action fa fa-phone\"\n//   onClick={this.acceptWithVideo(false)}\n//   >\n//   Accept Call\n//   <span className=\"btn_span\"></span>\n//   <Icon name='microphone' />\n// </Button>\n","import React, { Component } from 'react';\nimport { Divider, Label, Message, Card, Input, Button, Icon, Grid, Image } from 'semantic-ui-react'\nimport './App.css';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds:0,\n      mins:0,\n      hours: 0,\n      secondsUI: '00',\n      minsUI:'00:',\n      hoursUI: '00:',\n    };\n    this.startTimer=this.startTimer.bind(this)\n  }\n  componentDidMount() {\n    this.startTimer();\n\n  }\n\n  startTimer(){\n    var self = this;\n    this.timex = setTimeout(function(){\n      var seconds =  self.state.seconds;\n      var mins =  self.state.mins;\n      var hours =  self.state.hours;\n      seconds++\n      if(seconds > 59){\n          seconds=0;\n          mins++;\n         if(mins>59) {\n           mins=0;\n           hours++;\n           if(hours <10) {\n             self.setState({hoursUI: hours+':'})\n         }\n       }\n\n      if(mins<10){\n        self.setState({minsUI:'0' + mins+':'})\n\n      }else {\n         self.setState({minsUI: mins+':'})\n\n       };\n     }\n      if(seconds <10) {\n        self.setState({secondsUI: '0' + seconds})\n      }else {\n        self.setState({secondsUI: seconds })\n      }\n      self.setState({seconds, mins, hours })\n      console.log(\"hours\", hours, \"mins\", mins, \"seconds\", seconds)\n      self.startTimer();\n    },1000);\n  }\n\n\n  render() {\n    console.log('time')\n    return (\n      <Card.Content>\n        <Icon name='clock outline' />\n        <div id=\"timer\">\n          <span id=\"hours\">{this.state.hoursUI}</span>\n          <span id=\"mins\">{this.state.minsUI}</span>\n          <span id=\"seconds\">{this.state.secondsUI}</span>\n        </div>\n      </Card.Content>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport { Divider, Label, Message, Card, Input, Button, Icon, Grid, Image } from 'semantic-ui-react'\nimport './App.css';\nimport moment from 'moment'\nimport socket from './socket';\n\nclass ChatWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  componentDidMount() {\n\n  }\n\n  render() {\n    const processingMessage=(x)=>{\n      return x.message.indexOf('data:image')=== 0?\n        <Image src={x.message}/>\n        :<Message\n          color={x.sendBy === this.props.clientId? 'green':'orange' }>\n\n          { (x.message.indexOf('text/csv') > -1 || x.message.indexOf('octet-stream') > -1 || x.message.indexOf('data:application') > -1 )?\n          <a href={x.message} target=\"_blank\" download={x.filename}><Icon name='download' /> {x.filename}</a>\n          :x.message}\n        </Message>\n    }\n    console.log('chat')\n    return (\n      <div>\n        <div className='chat_history'>\n          {this.props.messages.map(x=> {\n            console.log(x);\n            return <div className={x.sendBy === this.props.clientId? 'message_me':'message_other' }>\n            {\n              processingMessage(x)\n            }\n            <span color='grey'>{moment(x.timestamp).fromNow()}</span>\n            </div>\n          })\n          }\n        </div>\n        <div>\n          <Input type='text' placeholder='...' action>\n            <input onChange={this.props.onMessageChange} value={this.props.message}/>\n            <Button color='facebook' type='submit'  onClick={this.props.onSubmit}>\n            <Icon name='rocketchat' />\n\n            Chat\n          </Button>\n\n          </Input>\n          <div className=\"ui middle aligned aligned grid container upload_files\">\n            <div className=\"ui fluid segment\">\n            <input type=\"file\" onChange={ (e) => this.props.fileEvent(e.target.files) } className=\"inputfile\" id=\"embedpollfileinput\" />\n\n            <label for=\"embedpollfileinput\" className=\"ui green right floated button\">\n              <i className=\"ui upload icon\"></i>\n              Upload image\n            </label>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default ChatWindow;\n","import React, { Component } from 'react';\nimport './App.css';\nimport socket from './socket';\nimport _ from 'lodash';\nimport moment from 'moment'\nimport logo from './logo.svg';\nimport PeerConnection from './PeerConnection';\nimport MainWindow from './MainWindow';\nimport CallWindow from './CallWindow';\nimport CallModal from './CallModal';\nimport Timer from './Timer';\nimport ChatWindow from './ChatWindow';\n\nimport { Divider, Label, Message, Card, Input, Button, Icon, Grid, Image } from 'semantic-ui-react'\nvar QRCode = require('qrcode.react');\n\n// patient & physician\nvar keys = {patient: '0x8Bc8f2CA3d78fe01A7E4bfb118761c751438b854', physician: '0x8Bc8f2CA3d78fe01A7E4bfb118761c751438b854'}\nconst apiUrl = `https://healthmarketplaceapi20181117074811.azurewebsites.net/`;\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      messages: [],\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null,\n\n\n    };\n    this.onMessageChange= this.onMessageChange.bind(this);\n    this.addMessage= this.addMessage.bind(this);\n    this.onSubmit=this.onSubmit.bind(this);\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.onSubmitPay = this.onSubmitPay.bind(this);\n    this.postData = this.postData.bind(this);\n    this.fileEvent=this.fileEvent.bind(this);\n    var self = this;\n    socket.on('RECEIVE_MESSAGE', function(data){\n      console.log('RECEIVE_MESSAGE', data)\n      self.addMessage(data);\n      if(!self.state.showTimer){\n        self.startTimer();\n      }\n    })\n      .on('init', data => this.setState({ clientId: data.id }))\n      .on('request', data => this.setState({ callModal: 'active', callFrom: data.from }))\n      .on('call', (data) => {\n        if (data.sdp) {\n          this.pc.setRemoteDescription(data.sdp);\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\n        } else this.pc.addIceCandidate(data.candidate);\n\n        if(!self.state.showTimer){\n          self.startTimer();\n        }\n      })\n      .on('end', this.endCall.bind(this, false))\n      .emit('init');\n  }\n  componentDidMount() {\n    // subscribeToTimer((err, timestamp) => this.setState({\n    //    timestamp\n    //  }));\n  }\n\n\n    startCall(isCaller, friendID, config) {\n      this.config = config;\n      this.pc = new PeerConnection(friendID)\n        .on('localStream', (src) => {\n          const newState = { callWindow: 'active', localSrc: src };\n          if (!isCaller) newState.callModal = '';\n          this.setState(newState);\n        })\n        .on('peerStream', src => this.setState({ peerSrc: src }))\n        .start(isCaller, config);\n    }\n\n    rejectCall() {\n      socket.emit('end', { to: this.state.callFrom });\n      this.setState({ callModal: '' });\n    }\n\n    endCall(isStarter) {\n      if (_.isFunction(this.pc.stop)) this.pc.stop(isStarter);\n      this.pc = {};\n      this.config = null;\n      this.setState({\n        callWindow: '',\n        localSrc: null,\n        peerSrc: null\n      });\n    }\n\n  addMessage = data => {\n    console.log(data);\n    this.setState({messages: [...this.state.messages, data]});\n    console.log(this.state.messages);\n  }\n\n  onMessageChange(e){\n    this.setState({message: e.target.value});\n\n  }\n  onSubmit(){\n\n    socket.emit('SEND_MESSAGE', {\n      message:  this.state.message,\n      sendBy: this.state.clientId,\n      timestamp: new Date(),\n    })\n\n    this.setState({message: ''})\n  }\n\n\n  onSubmitPay(){\n    const role = this.state.clientId.split('-')[0];\n    if(role === 'patient'){\n      const publicKeyPatient = keys[role];\n      const publicKeyPhysician = keys['physician'];\n      console.log(\"publicKeyPhysician\", this.state)\n      this.postData(apiUrl + 'api/TransactionHeaders', {\n        \"patientKey\": publicKeyPatient,\n        \"physicianKey\": publicKeyPhysician,\n        \"timeElapsed\": new Date() - this.state.startTime,\n        \"transactionDate\": new Date()\n      })\n        .then(data =>{ console.log(JSON.stringify(data)); return JSON.stringify(data);})\n        .then(data=> {\n          this.setState({showTimer: false})\n        })\n        .catch(error => {\n          this.setState({showTimer: false, showErrorMsg: true, errorMsg: 'We cannot process your payment. Please contact us'})\n\n        });\n\n    }\n  }\n\n\n  postData(url = ``, data = {}) {\n    // Default options are marked with *\n      return fetch(url, {\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n          mode: \"cors\", // no-cors, cors, *same-origin\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: \"same-origin\", // include, *same-origin, omit\n          headers: {\n              \"Content-Type\": \"application/json; charset=utf-8\",\n              // \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          redirect: \"follow\", // manual, *follow, error\n          referrer: \"no-referrer\", // no-referrer, *client\n          body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      })\n      .then(response => response.json()); // parses response to JSON\n  }\n\n  startTimer(){\n    console.log(\"showTimer\")\n\n    this.setState({showTimer: true, startTime: new Date()})\n  }\n\n  fileEvent(files){\n    var self = this;\n    console.log(files)\n    var data = files[0];\n     var reader = new FileReader();\n      reader.onload = function(evt){\n       // socket.emit('user image', evt.target.result);\n       socket.emit('SEND_MESSAGE', {\n         message:  evt.target.result,\n         sendBy: self.state.clientId,\n         filename: data.name,\n         timestamp: new Date(),\n       })\n     };\n     reader.readAsDataURL(data);\n  }\n  render() {\n    const isPatient = this.state.clientId.split('-')[0] === 'patient';\n    console.log(isPatient, this.state.clientId)\n    return (\n      <div className=\"App\">\n        <div  className=\"App\">\n\n        <Grid celled='internally'  className=\"App\">\n          <Grid.Row>\n            <Grid.Column tablet={3} computer={3} mobile={16} >\n            <Card className='card_c_'>\n               <Card.Content header='About you' />\n               <Card.Content>\n                You're a\n                <Label as='a' className='txt_label'>{this.state.clientId}</Label>\n\n               </Card.Content>\n               <Card.Content extra>\n                 <Icon name='user' />\n                 Visit {Math.round(Math.random() * 100)} times\n               </Card.Content>\n             </Card>\n             <Card className='card_c_'>\n                <Card.Content header={'Current Session'} />\n                {this.state.showTimer&& <Timer\n\n                />}\n\n\n                {isPatient &&<Card.Content>\n                   <QRCode value={this.state.callFrom} />\n                   <Divider horizontal>Or</Divider>\n\n                  <Button icon labelPosition='left'  color='green' onClick={this.onSubmitPay}>\n                    Pay Now\n                  <Icon name='money' />\n                  </Button>\n                </Card.Content>\n                }\n\n\n\n\n              </Card>\n\n            </Grid.Column>\n            <Grid.Column tablet={8} computer={8} mobile={16}>\n            {isPatient && <MainWindow\n              clientId={this.state.clientId}\n              startCall={this.startCallHandler}\n            />}\n            {!this.state.callFrom && !isPatient &&\n              <Message\n                 success\n                 header=\"You don't have a patient right now. Please wait.\"\n                 content='We will show the prompt as soon as we found the match'\n               />\n\n            }\n            {this.state.showErrorMsg &&  <Message\n                error\n                header={this.state.errorMsg}\n              />}\n            {this.state.callWindow === 'active' && <CallWindow\n              status={this.state.callWindow}\n              localSrc={this.state.localSrc}\n              peerSrc={this.state.peerSrc}\n              config={this.config}\n              mediaDevice={this.pc.mediaDevice}\n              endCall={this.endCallHandler}\n            />}\n            {this.state.callFrom && this.state.callModal === 'active' &&\n              <CallModal\n                status={this.state.callModal}\n                startCall={this.startCallHandler}\n                rejectCall={this.rejectCallHandler}\n                callFrom={this.state.callFrom}\n              />\n            }\n\n\n            </Grid.Column>\n            <Grid.Column tablet={5} computer={5}  mobile={16}>\n            <ChatWindow\n              clientId={this.state.clientId}\n              message={this.state.message}\n              messages={this.state.messages}\n              onMessageChange={this.onMessageChange}\n              onSubmit={this.onSubmit}\n              fileEvent={this.fileEvent}\n            />\n            </Grid.Column>\n          </Grid.Row>\n\n        </Grid>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport socket from './socket';\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n\n    };\n    this.playRef = React.createRef();\n\n  }\n  componentDidMount() {\n    var self = this;\n    socket.on('stream',function(image){\n      console.log(image);\n            self.playRef.current.src=image;\n    });\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      Preview\n      <img id=\"play\" ref={this.playRef} width=\"500\"/>\n      </div>\n    );\n  }\n}\n\nexport default Preview;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport _ from 'lodash';\nimport socket from './socket';\nimport PeerConnection from './PeerConnection';\nimport MainWindow from './MainWindow';\nimport CallWindow from './CallWindow';\nimport CallModal from './CallModal';\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null\n    };\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n  }\n\n  componentDidMount() {\n    socket\n      .on('init', data => this.setState({ clientId: data.id }))\n      .on('request', data => this.setState({ callModal: 'active', callFrom: data.from }))\n      .on('call', (data) => {\n        if (data.sdp) {\n          this.pc.setRemoteDescription(data.sdp);\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\n        } else this.pc.addIceCandidate(data.candidate);\n      })\n      .on('end', this.endCall.bind(this, false))\n      .emit('init');\n  }\n\n  startCall(isCaller, friendID, config) {\n    this.config = config;\n    this.pc = new PeerConnection(friendID)\n      .on('localStream', (src) => {\n        const newState = { callWindow: 'active', localSrc: src };\n        if (!isCaller) newState.callModal = '';\n        this.setState(newState);\n      })\n      .on('peerStream', src => this.setState({ peerSrc: src }))\n      .start(isCaller, config);\n  }\n\n  rejectCall() {\n    socket.emit('end', { to: this.state.callFrom });\n    this.setState({ callModal: '' });\n  }\n\n  endCall(isStarter) {\n    if (_.isFunction(this.pc.stop)) this.pc.stop(isStarter);\n    this.pc = {};\n    this.config = null;\n    this.setState({\n      callWindow: '',\n      localSrc: null,\n      peerSrc: null\n    });\n  }\n\n  render() {\n    console.log('Test')\n\n    return (\n      <div >\n        <MainWindow\n          clientId={this.state.clientId}\n          startCall={this.startCallHandler}\n        />\n        <CallWindow\n          status={this.state.callWindow}\n          localSrc={this.state.localSrc}\n          peerSrc={this.state.peerSrc}\n          config={this.config}\n          mediaDevice={this.pc.mediaDevice}\n          endCall={this.endCallHandler}\n        />\n        <CallModal\n          status={this.state.callModal}\n          startCall={this.startCallHandler}\n          rejectCall={this.rejectCallHandler}\n          callFrom={this.state.callFrom}\n        />\n      </div >\n    );\n  }\n}\n\nexport default Test;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport Preview from './Preview';\nimport Test from './Test';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/preview\" component={Preview} />\n      <Route path=\"/test\" component={Test} />\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}