{"version":3,"sources":["logo.svg","serviceWorker.js","socket.js","MainWindow.js","App.js","Preview.js","Emitter.js","MediaDevice.js","PeerConnection.js","CallWindow.js","CallModal.js","Test.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","HOST","origin","replace","indexOf","socket","openSocket","friendID","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addMessage","data","console","log","setState","messages","toConsumableArray","state","concat","timestamp","message","onMessageChange","bind","assertThisInitialized","onSubmit","loadCamera","videoRef","React","createRef","canvasRef","self","on","cb","_this2","err","emit","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msgGetUserMedia","video","audio","loadFail","mediaDevices","facingMode","height","min","ideal","max","then","stream","catch","current","context","getContext","width","e","target","value","src","URL","createObjectURL","drawImage","toDataURL","react_default","a","createElement","className","ref","id","style","autoplay","map","x","onChange","onClick","Component","Preview","playRef","image","Emitter","events","event","_len","arguments","length","args","Array","_key","forEach","fn","apply","push","_","isFunction","listeners","index","findIndex","_fn","splice","MediaDevice","type","len","track","enabled","set","getTracks","stop","PC_CONFIG","iceServers","urls","PeerConnection","pc","RTCPeerConnection","onicecandidate","to","candidate","onaddstream","mediaDevice","isCaller","config","addStream","createOffer","start","isStarter","close","off","getDescription","createAnswer","desc","setLocalDescription","sdp","rtcSdp","RTCSessionDescription","setRemoteDescription","iceCandidate","RTCIceCandidate","addIceCandidate","MainWindow","startCall","clientId","document","title","spellCheck","placeholder","callWithVideo","CallWindow","Video","Audio","btns","icon","setMediaStream","nextProps","conf","toggle","capitalize","_this$props","peerSrc","localSrc","peerVideo","srcObject","localVideo","deviceType","defineProperty","btn","key","classnames","disable","toggleMediaDevice","_this3","status","el","autoPlay","muted","renderControlButtons","endCall","CallModal","callFrom","acceptWithVideo","rejectCall","Test","callWindow","callModal","startCallHandler","endCallHandler","rejectCallHandler","from","newState","src_MainWindow","src_CallWindow","src_CallModal","routing","BrowserRouter","Route","exact","path","component","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe17034d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1c92b8a7.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import openSocket from 'socket.io-client';\n\nvar HOST = window.location.origin.replace(/^http/, 'ws')\n\nif(HOST.indexOf('localhost') > -1){\n  HOST='localhost:4200'\n}\nconst  socket = openSocket(HOST);\n\nexport default socket;\n","import React, { Component } from 'react';\n\nlet friendID;\n\nclass MainWindow extends Component {\n  /**\n   * Start the call with or without video\n   * @param {Boolean} video\n   */\n  callWithVideo(video) {\n    const config = { audio: true };\n    config.video = video;\n    return () => this.props.startCall(true, friendID, config);\n  }\n  render() {\n    const { clientId } = this.props;\n    document.title = `${clientId} - VideoCall`;\n    return (\n      <div className=\"container main-window\">\n        <div>\n          <h3>\n            Hi, your ID is\n            <input type=\"text\" className=\"txt-clientId\" value={clientId} />\n          </h3>\n          <h4>Get started by calling a friend below</h4>\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            className=\"txt-clientId\"\n            spellCheck={false}\n            placeholder=\"Your friend ID\"\n            onChange={event => friendID = event.target.value}\n          />\n          <div>\n            <button\n              className=\"btn-action fa fa-video-camera\"\n              onClick={this.callWithVideo(true)}\n            />\n            <button\n              className=\"btn-action fa fa-phone\"\n              onClick={this.callWithVideo(false)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainWindow;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport socket from './socket';\nfunction subscribeToTimer(cb) {\n  socket.on('timer', timestamp => cb(null, timestamp));\n  socket.emit('subscribeToTimer', 1000);\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timestamp: 'no timestamp yet',\n      message:'here',\n      messages: []\n\n    };\n    this.onMessageChange= this.onMessageChange.bind(this);\n    this.addMessage= this.addMessage.bind(this);\n    this.onSubmit=this.onSubmit.bind(this);\n    this.loadCamera=this.loadCamera.bind(this);\n    this.videoRef = React.createRef();\n    this.canvasRef = React.createRef();\n\n\n    var self = this;\n    socket.on('RECEIVE_MESSAGE', function(data){\n      console.log('RECEIVE_MESSAGE', data)\n      self.addMessage(data);\n    })\n  }\n  componentDidMount() {\n\n\n    subscribeToTimer((err, timestamp) => this.setState({\n       timestamp\n     }));\n\n     navigator.getUserMedia = ( navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msgGetUserMedia );\n\n     if(navigator.getUserMedia){\n         navigator.getUserMedia({video: true, audio: false},this.loadCamera,this.loadFail);\n     }\n\n     if(navigator.mediaDevices){\n       const constraints = {\n           video: {\n             facingMode: 'user',\n             height: { min: 360, ideal: 720, max: 1080 }\n           },\n           audio: true\n         };\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then((stream) => {\n          console.log(\"getUserMedia\", stream)\n          this.stream = stream;\n          this.emit('stream', stream);\n        })\n        .catch(err => console.log(err));\n\n     }\n     console.log(this.canvasRef.current)\n     if(this.canvasRef.current){\n\n\n\n       var context = this.canvasRef.current.getContext('2d');\n       console.log(\"context\", context)\n       this.canvasRef.current.width = 900;\n       this.canvasRef.current.height = 700;\n\n       context.width = this.canvasRef.current.width;\n       context.height = this.canvasRef.current.height;\n\n       var self = this;\n       // setInterval(function(){\n       //   // console.log(\"self.videoRef.current\", self.videoRef.current)\n       //\n       //     self.viewVideo(self.videoRef.current, context);\n       // },0.001);\n     }\n\n  }\n\n\n  addMessage = data => {\n    console.log(data);\n    this.setState({messages: [...this.state.messages, data]});\n    console.log(this.state.messages);\n  }\n  onMessageChange(e){\n    this.setState({message: e.target.value});\n\n  }\n  onSubmit(){\n    socket.emit('SEND_MESSAGE', {\n      message:  this.state.message\n    })\n  }\n  // logger(msg){\n  //     $('#logger').text(msg);\n  // }\n\n  loadCamera(stream){\n    if(this.videoRef.current){\n      this.videoRef.current.src = window.URL.createObjectURL(stream);\n      console.log(\"Camera connected\");\n    }\n\n  }\n\n  loadFail(){\n      console.log(\"Camera not connected\");\n  }\n\n  viewVideo(video,context){\n      context.drawImage(video,0,0,context.width,context.height);\n      socket.emit('stream',this.canvasRef.current.toDataURL('image/webp'));\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>This is the timer value: {this.state.timestamp}</div>\n\n        <video\n        ref={this.videoRef}\n        src=\"\"\n        id=\"video\"\n        style={{width:'700px', height: '350px'}} autoplay=\"true\">\n        </video>\n\n        <canvas id=\"preview\" ref={this.canvasRef}></canvas>\n        {this.state.messages.map(x=> { console.log(x) ;return <p>{x.message}</p>})}\n        <input value={this.state.message} onChange={this.onMessageChange}/>\n        <button onClick={this.onSubmit}>Send</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport socket from './socket';\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n\n    };\n    this.playRef = React.createRef();\n\n  }\n  componentDidMount() {\n    var self = this;\n    socket.on('stream',function(image){\n      console.log(image);\n            self.playRef.current.src=image;\n    });\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      Preview\n      <img id=\"play\" ref={this.playRef} width=\"500\"/>\n      </div>\n    );\n  }\n}\n\nexport default Preview;\n","import _ from 'lodash';\n\nclass Emitter {\n  constructor() {\n    this.events = {};\n  }\n\n  emit(event, ...args) {\n    if (this.events[event]) {\n      this.events[event].forEach(fn => fn(...args));\n    }\n    return this;\n  }\n\n  on(event, fn) {\n    if (this.events[event]) this.events[event].push(fn);\n    else this.events[event] = [fn];\n    return this;\n  }\n\n  off(event, fn) {\n    if (event && _.isFunction(fn)) {\n      const listeners = this.events[event];\n      const index = listeners.findIndex(_fn => _fn === fn);\n      listeners.splice(index, 1);\n    } else this.events[event] = [];\n    return this;\n  }\n}\n\nexport default Emitter;\n","import _ from 'lodash';\nimport Emitter from './Emitter';\n\n/**\n * Manage all media devices\n */\nclass MediaDevice extends Emitter {\n  /**\n   * Start media devices and send stream\n   */\n  start() {\n    const constraints = {\n      video: {\n        facingMode: 'user',\n        height: { min: 360, ideal: 720, max: 1080 }\n      },\n      audio: true\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        this.stream = stream;\n        this.emit('stream', stream);\n      })\n      .catch(err => console.log(err));\n\n    return this;\n  }\n  /**\n   * Turn on/off a device\n   * @param {String} type - Type of the device\n   * @param {Boolean} [on] - State of the device\n   */\n  toggle(type, on) {\n    const len = arguments.length;\n    if (this.stream) {\n      this.stream[`get${type}Tracks`]().forEach((track) => {\n        const state = len === 2 ? on : !track.enabled;\n        _.set(track, 'enabled', state);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Stop all media track of devices\n   */\n  stop() {\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n    return this;\n  }\n}\n\nexport default MediaDevice;\n","import MediaDevice from './MediaDevice';\nimport Emitter from './Emitter';\nimport socket from './socket';\n\nconst PC_CONFIG = { iceServers: [{ urls: ['stun:stun.l.google.com:19302'] }] };\n\nclass PeerConnection extends Emitter {\n  /**\n     * Create a PeerConnection.\n     * @param {String} friendID - ID of the friend you want to call.\n     */\n  constructor(friendID) {\n    super();\n    this.pc = new RTCPeerConnection(PC_CONFIG);\n    this.pc.onicecandidate = event => socket.emit('call', {\n      to: this.friendID,\n      candidate: event.candidate\n    });\n    this.pc.onaddstream = event => this.emit('peerStream', event.stream);\n\n    this.mediaDevice = new MediaDevice();\n    this.friendID = friendID;\n  }\n  /**\n   * Starting the call\n   * @param {Boolean} isCaller\n   * @param {Object} config - configuration for the call {audio: boolean, video: boolean}\n   */\n  start(isCaller, config) {\n    this.mediaDevice\n      .on('stream', (stream) => {\n        this.pc.addStream(stream);\n        this.emit('localStream', stream);\n        if (isCaller) socket.emit('request', { to: this.friendID });\n        else this.createOffer();\n      })\n      .start(config);\n\n    return this;\n  }\n  /**\n   * Stop the call\n   * @param {Boolean} isStarter\n   */\n  stop(isStarter) {\n    if (isStarter) socket.emit('end', { to: this.friendID });\n    this.mediaDevice.stop();\n    this.pc.close();\n    this.pc = null;\n    this.off();\n    return this;\n  }\n\n  createOffer() {\n    this.pc.createOffer()\n      .then(this.getDescription.bind(this))\n      .catch(err => console.log(err));\n    return this;\n  }\n\n  createAnswer() {\n    this.pc.createAnswer()\n      .then(this.getDescription.bind(this))\n      .catch(err => console.log(err));\n    return this;\n  }\n\n  getDescription(desc) {\n    this.pc.setLocalDescription(desc);\n    socket.emit('call', { to: this.friendID, sdp: desc });\n    return this;\n  }\n\n  /**\n   * @param {Object} sdp - Session description\n   */\n  setRemoteDescription(sdp) {\n    const rtcSdp = new RTCSessionDescription(sdp);\n    this.pc.setRemoteDescription(rtcSdp);\n    return this;\n  }\n  /**\n   * @param {Object} candidate - ICE Candidate\n   */\n  addIceCandidate(candidate) {\n    if (candidate) {\n      const iceCandidate = new RTCIceCandidate(candidate);\n      this.pc.addIceCandidate(iceCandidate);\n    }\n    return this;\n  }\n}\n\nexport default PeerConnection;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport _ from 'lodash';\n\nclass CallWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Video: true,\n      Audio: true\n    };\n\n    this.btns = [\n      { type: 'Video', icon: 'fa-video-camera' },\n      { type: 'Audio', icon: 'fa-microphone' }\n    ];\n  }\n\n  componentDidMount() {\n    this.setMediaStream();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Initialize when the call started\n    if (!this.props.config && nextProps.config) {\n      const { config, mediaDevice } = nextProps;\n      _.forEach(config, (conf, type) =>\n        mediaDevice.toggle(_.capitalize(type), conf));\n\n      this.setState({\n        Video: config.video,\n        Audio: config.audio\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  }\n\n  setMediaStream() {\n    const { peerSrc, localSrc } = this.props;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\n  }\n\n  /**\n   * Turn on/off a media device\n   * @param {String} deviceType - Type of the device eg: Video, Audio\n   */\n  toggleMediaDevice(deviceType) {\n    this.setState({\n      [deviceType]: !this.state[deviceType]\n    });\n    this.props.mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(`btn-action fa ${icon}`, {\n      disable: !this.state[type]\n    });\n\n    return this.btns.map(btn => (\n      <button\n        key={`btn${btn.type}`}\n        className={getClass(btn.icon, btn.type)}\n        onClick={() => this.toggleMediaDevice(btn.type)}\n      />\n    ));\n  }\n  render() {\n    const { status } = this.props;\n    return (\n      <div className={classnames('call-window', status)}>\n        <video id=\"peerVideo\" ref={el => this.peerVideo = el} autoPlay />\n        <video id=\"localVideo\" ref={el => this.localVideo = el} autoPlay muted />\n        <div className=\"video-control\">\n          {this.renderControlButtons()}\n          <button\n            className=\"btn-action hangup fa fa-phone\"\n            onClick={() => this.props.endCall(true)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CallWindow;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\n\nclass CallModal extends Component {\n  acceptWithVideo(video) {\n    const config = { audio: true, video };\n    return () => this.props.startCall(false, this.props.callFrom, config);\n  }\n\n  render() {\n    return (\n      <div className={classnames('call-modal', this.props.status)}>\n        <p>\n          <span className=\"caller\">{this.props.callFrom}</span> is calling ...\n        </p>\n        <button\n          className=\"btn-action fa fa-video-camera\"\n          onClick={this.acceptWithVideo(true)}\n        />\n        <button\n          className=\"btn-action fa fa-phone\"\n          onClick={this.acceptWithVideo(false)}\n        />\n        <button\n          className=\"btn-action hangup fa fa-phone\"\n          onClick={this.props.rejectCall}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CallModal;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport _ from 'lodash';\nimport socket from './socket';\nimport PeerConnection from './PeerConnection';\nimport MainWindow from './MainWindow';\nimport CallWindow from './CallWindow';\nimport CallModal from './CallModal';\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null\n    };\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n  }\n\n  componentDidMount() {\n    socket\n      .on('init', data => this.setState({ clientId: data.id }))\n      .on('request', data => this.setState({ callModal: 'active', callFrom: data.from }))\n      .on('call', (data) => {\n        if (data.sdp) {\n          this.pc.setRemoteDescription(data.sdp);\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\n        } else this.pc.addIceCandidate(data.candidate);\n      })\n      .on('end', this.endCall.bind(this, false))\n      .emit('init');\n  }\n\n  startCall(isCaller, friendID, config) {\n    this.config = config;\n    this.pc = new PeerConnection(friendID)\n      .on('localStream', (src) => {\n        const newState = { callWindow: 'active', localSrc: src };\n        if (!isCaller) newState.callModal = '';\n        this.setState(newState);\n      })\n      .on('peerStream', src => this.setState({ peerSrc: src }))\n      .start(isCaller, config);\n  }\n\n  rejectCall() {\n    socket.emit('end', { to: this.state.callFrom });\n    this.setState({ callModal: '' });\n  }\n\n  endCall(isStarter) {\n    if (_.isFunction(this.pc.stop)) this.pc.stop(isStarter);\n    this.pc = {};\n    this.config = null;\n    this.setState({\n      callWindow: '',\n      localSrc: null,\n      peerSrc: null\n    });\n  }\n\n  render() {\n    return (\n      <div >\n        <MainWindow\n          clientId={this.state.clientId}\n          startCall={this.startCallHandler}\n        />\n        <CallWindow\n          status={this.state.callWindow}\n          localSrc={this.state.localSrc}\n          peerSrc={this.state.peerSrc}\n          config={this.config}\n          mediaDevice={this.pc.mediaDevice}\n          endCall={this.endCallHandler}\n        />\n        <CallModal\n          status={this.state.callModal}\n          startCall={this.startCallHandler}\n          rejectCall={this.rejectCallHandler}\n          callFrom={this.state.callFrom}\n        />\n      </div >\n    );\n  }\n}\n\nexport default Test;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport Preview from './Preview';\nimport Test from './Test';\n\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/preview\" component={Preview} />\n      <Route path=\"/test\" component={Test} />\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}